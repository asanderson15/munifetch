/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'aanderson' at '2/18/15 1:52 PM' with Gradle 2.3
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
    }
}

// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'application'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '1.2.0'
}

/* Need to set path for Maven repo build in local.gradle
 *
 * e.g. of local.gradle file contents:
 *
 * ext.localBuildURL = "file:///home/username/<path>/munifetch/build/maven-repo";
 *
 */
apply from: './local.gradle'

applicationName = "muni-fetch"
mainClassName = "org.asanderson.munifetch.Application"

project.version = "0.0.0"
project.group = "org.asanderson.munifetch"


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.glassfish.jersey.core:jersey-client:2.16'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.5.1'
    compile 'joda-time:joda-time:2.7'


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

/* Need to set path in local.gradle
 *
 * e.g. of local.gradle file contents:
 *
 * ext.localBuildURL = "file:///home/username/<path>/munifetch/build/maven-repo";
 *
 */

uploadArchives {
    repositories.mavenDeployer {
        repository(url: localBuildURL)
        pom.artifactId = "munifetch"

    }
}

uploadShadow {
    repositories.mavenDeployer {
        repository(url: localBuildURL)
        pom.artifactId = "munifetch"

    }
}

